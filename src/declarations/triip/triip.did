type User = record {username: opt text;};
type TravelPlanUpdate = 
 record {
   id: opt text;
   travel_plan: TravelPlanInformation;
 };
type TravelPlanInformation = 
 record {
   activities: opt vec bool;
   days: opt nat;
   destination: opt text;
   join_type: opt nat;
   public_mode: opt bool;
   timeEnd: opt int;
   timeStart: opt int;
 };
type Result_1 = 
 variant {
   err: Error;
   ok: Profile;
 };
type Result = 
 variant {
   err: Error;
   ok;
 };
type ProfileUpdate = record {user: User;};
type Profile = 
 record {
   id: principal;
   user: User;
 };
type Error = 
 variant {
   AlreadyExisting;
   NotAuthorized;
   NotFound;
   SomethingWrong;
 };
service : {
  create: (ProfileUpdate) -> (Result);
  createTravelPlan: (text, TravelPlanUpdate) -> (Result);
  delete: () -> (Result);
  read: () -> (Result_1);
  update: (Profile) -> (Result);
}
